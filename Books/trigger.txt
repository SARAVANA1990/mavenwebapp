CREATE TABLE ETH_TRIGGER_MAIN(
                      TRAN_REF_NO INTEGER NOT NULL
					 ,TRAN_DATE DATETIME NOT NULL
					 ,CURR_STATUS INT
					 ,COMMAD NVARCHAR(MAX)
                )

CREATE TABLE ETH_TRIGGER_HIST(
                   H_TRANS_REF_NO INTEGER 
				  ,H_CURR_STATUS INT

)
DELETE FROM ETH_TRIGGER_MAIN
ALTER TABLE ETH_TRIGGER_MAIN  ADD CHECK_POINT NVARCHAR(5) NOT NULL
ALTER TABLE ETH_TRIGGER_HIST  ADD H_USER_CODE NVARCHAR(5) 

ALTER TABLE ETH_TRIGGER_HIST  ADD H_USER_LVL_CODE NVARCHAR(5) 
ALTER TABLE ETH_TRIGGER_MAIN ADD CONSTRAINT TRIGGER_MAIN_PK PRIMARY KEY(TRAN_REF_NO,CHECK_POINT)

ALTER TABLE ETH_TRIGGER_HIST ADD H_TRAN_DATE DATETIME

ALTER TABLE ETH_TRIGGER_HIST ADD H_SEQUENCE INT

ALTER TABLE ETH_TRIGGER_HIST ADD H_CHECK_POINT NVARCHAR(5)

ALTER TABLE ETH_TRIGGER_HIST ADD H_COMMAD NVARCHAR(MAX)

 DROP TRIGGER TRIGGER_HIST_INSERT  

ALTER TABLE ETH_TRIGGER_HIST DROP COLUMN TRAN_DATE 

ALTER TABLE ETH_TRIGGER_HIST DROP COLUMN H_SEQUENCE 
ALTER TABLE ETH_TRIGGER_HIST DROP COLUMN CHECK_POINT 
 

Create trigger TRIGGER_HIST_INSERT
ON ETH_TRIGGER_MAIN
AFTER INSERT
AS
BEGIN
  INSERT INTO ETH_TRIGGER_HIST(
                   H_TRANS_REF_NO  
				  ,H_CURR_STATUS 
				  ,H_TRAN_DATE 
				  ,H_CHECK_POINT
				  ,H_COMMAD
				  ,H_USER_CODE
				  ,H_USER_LVL_CODE

  ) select TRAN_REF_NO , CURR_STATUS , getdate() ,CHECK_POINT,COMMAD,USER_CODE,USER_LVL_CODE from inserted 
	
END


DELETE FROM ETH_TRIGGER_MAIN

SELECT * FROM ETH_TRIGGER_MAIN

selecT * FROM ETH_TRIGGER_HIST

INSERT INTO ETH_TRIGGER_MAIN VALUES(101,GETDATE(),3,'TEST TRIGGER testttt','2','U1','200')

UPDATE  ETH_TRIGGER_MAIN SET COMMAD='TEST TRIGGER testttt final' WHERE TRAN_REF_NO='101'

SELECT *  FROM ETH_TRIGGER_HIST 

--CREATE TRIGGER TRIGGER_MAIN_UPDATE
--       ON ETH_TRIGGER_MAIN
--AFTER UPDATE
--AS
--BEGIN
      
--END




SELECT *,H_COMMAD FROM ETH_TRIGGER_HIST 
         WHERE H_CURR_STATUS='2' AND H_TRAN_DATE=(SELECT MAX(H_TRAN_DATE) FROM ETH_TRIGGER_HIST WHERE H_CURR_STATUS='2')
DROP TRIGGER TRIGGER_MAIN_UPDATE
CREATE TRIGGER TRIGGER_MAIN_UPDATE
   ON  ETH_TRIGGER_MAIN
   AFTER UPDATE
AS 
BEGIN
     
    SET NOCOUNT ON;
INSERT INTO ETH_TRIGGER_HIST
select TRAN_REF_NO , CURR_STATUS , getdate() ,CHECK_POINT,COMMAD,USER_CODE,USER_LVL_CODE from inserted 


END













